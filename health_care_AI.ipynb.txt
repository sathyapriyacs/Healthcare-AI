{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "source": [
        "!pip install Flask"
      ],
      "metadata": {
        "id": "1suuemMXRz1t",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "8ce84483-32b3-4bad-c716-47e40881174e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: Flask in /usr/local/lib/python3.12/dist-packages (3.1.2)\n",
            "Requirement already satisfied: blinker>=1.9.0 in /usr/local/lib/python3.12/dist-packages (from Flask) (1.9.0)\n",
            "Requirement already satisfied: click>=8.1.3 in /usr/local/lib/python3.12/dist-packages (from Flask) (8.2.1)\n",
            "Requirement already satisfied: itsdangerous>=2.2.0 in /usr/local/lib/python3.12/dist-packages (from Flask) (2.2.0)\n",
            "Requirement already satisfied: jinja2>=3.1.2 in /usr/local/lib/python3.12/dist-packages (from Flask) (3.1.6)\n",
            "Requirement already satisfied: markupsafe>=2.1.1 in /usr/local/lib/python3.12/dist-packages (from Flask) (3.0.2)\n",
            "Requirement already satisfied: werkzeug>=3.1.0 in /usr/local/lib/python3.12/dist-packages (from Flask) (3.1.3)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install streamlit\n",
        "import streamlit as st\n",
        "\n",
        "\n",
        "st.title(\"Health care AI Assistance\")\n",
        "\n",
        "\n",
        "st.text_input(\"Enter your health related question: \")\n",
        "\n",
        "st.sidebar.header(\"patient profile\")\n",
        "\n",
        "\n",
        "st.sidebar.text_input(\"Name\")\n",
        "\n",
        "st.sidebar.number_input(\"Age\",0,100)\n",
        "\n",
        "st.sidebar.selectbox(\"Gender\",[\"Male\",\"Female\",\"Other\"])\n",
        "\n",
        "st.sidebar.text_area(\"Medical History\")\n",
        "\n",
        "st.sidebar.text_area(\"Current Medication\")\n",
        "\n",
        "st.sidebar.text_input(\"Allergies\")"
      ],
      "metadata": {
        "id": "SbRRgtR6SDyR"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# healthcare_app.py\n",
        "# ---------------------------------------------\n",
        "# Streamlit Healthcare Assistant\n",
        "# - Predicts risks for Diabetes, Heart Disease, Hypertension\n",
        "# - Generates a simple care plan\n",
        "# - Builds dashboards from uploaded CSV data\n",
        "#\n",
        "# DISCLAIMER: This tool is for educational use only and is NOT medical advice.\n",
        "# Always consult licensed clinicians for diagnosis and treatment.\n",
        "# ---------------------------------------------\n",
        "!pip install streamlit\n",
        "import io\n",
        "import json\n",
        "import base64\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import plotly.express as px\n",
        "import streamlit as st\n",
        "from datetime import datetime\n",
        "\n",
        "# ---------------------------\n",
        "# Utility & risk calculations\n",
        "# ---------------------------\n",
        "def sigmoid(x):\n",
        "    return 1 / (1 + np.exp(-x))\n",
        "\n",
        "def compute_bmi(height_cm: float, weight_kg: float) -> float:\n",
        "    if height_cm is None or weight_kg is None or height_cm <= 0:\n",
        "        return np.nan\n",
        "    return weight_kg / ((height_cm / 100) ** 2)\n",
        "\n",
        "def clip_num(x, lo, hi):\n",
        "    try:\n",
        "        return float(np.clip(float(x), lo, hi))\n",
        "    except Exception:\n",
        "        return np.nan\n",
        "\n",
        "def normalize(x, mean, std, lo=None, hi=None):\n",
        "    \"\"\"Z-score then clip to [-3, 3] for stability.\"\"\"\n",
        "    if x is None or pd.isna(x):\n",
        "        return 0.0\n",
        "    z = (float(x) - mean) / (std if std > 0 else 1.0)\n",
        "    z = float(np.clip(z, -3, 3))\n",
        "    if lo is not None and hi is not None:\n",
        "        return float(np.clip(z, lo, hi))\n",
        "    return z\n",
        "\n",
        "def risk_model(features: dict):\n",
        "    \"\"\"\n",
        "    Simple transparent rule-based scoring mapped through sigmoid to produce\n",
        "    pseudo-probabilities. This is NOT a medical model.\n",
        "    Inputs (features):\n",
        "      age, sex, height_cm, weight_kg, bmi, systolic_bp, diastolic_bp,\n",
        "      fasting_glucose, hba1c, total_chol, hdl, ldl,\n",
        "      smoker(bool), family_history(bool), activity_minutes_per_week\n",
        "    Returns dict of risks in [0,1].\n",
        "    \"\"\"\n",
        "\n",
        "    # Extract features with defaults\n",
        "    age = features.get(\"age\", 35)\n",
        "    bmi = features.get(\"bmi\", np.nan)\n",
        "    sys_bp = features.get(\"systolic_bp\", 120)\n",
        "    dia_bp = features.get(\"diastolic_bp\", 80)\n",
        "    fbg = features.get(\"fasting_glucose\", 95)\n",
        "    hba1c = features.get(\"hba1c\", 5.3)\n",
        "    chol = features.get(\"total_chol\", 180)\n",
        "    hdl = features.get(\"hdl\", 50)\n",
        "    ldl = features.get(\"ldl\", 110)\n",
        "    smoker = 1.0 if features.get(\"smoker\", False) else 0.0\n",
        "    fam = 1.0 if features.get(\"family_history\", False) else 0.0\n",
        "    act = features.get(\"activity_minutes_per_week\", 60)\n",
        "\n",
        "    # Normalizations (rough population-ish priors)\n",
        "    n_age = normalize(age, 45, 12)\n",
        "    n_bmi = normalize(bmi, 26, 5)\n",
        "    n_sys = normalize(sys_bp, 125, 15)\n",
        "    n_dia = normalize(dia_bp, 80, 10)\n",
        "    n_fbg = normalize(fbg, 95, 12)\n",
        "    n_a1c = normalize(hba1c, 5.4, 0.5)\n",
        "    n_chol = normalize(chol, 190, 35)\n",
        "    n_hdl = -normalize(hdl, 55, 12)  # higher HDL reduces risk\n",
        "    n_ldl = normalize(ldl, 120, 30)\n",
        "    n_act = -normalize(act, 120, 60)  # more activity reduces risk\n",
        "\n",
        "    # Diabetes risk score\n",
        "    # drivers: BMI, fasting glucose, HbA1c, age, activity, family history\n",
        "    d_score = (\n",
        "        0.9 * n_bmi\n",
        "        + 1.2 * n_fbg\n",
        "        + 1.2 * n_a1c\n",
        "        + 0.5 * n_age\n",
        "        + 0.5 * n_act\n",
        "        + 0.6 * fam\n",
        "        + 0.3 * smoker\n",
        "        - 0.2  # baseline\n",
        "    )\n",
        "    diabetes = float(sigmoid(d_score))\n",
        "\n",
        "    # Heart disease risk score\n",
        "    # drivers: age, total chol, LDL, HDL (protective), BP, smoking, family history, activity\n",
        "    h_score = (\n",
        "        0.8 * n_age\n",
        "        + 0.8 * n_chol\n",
        "        + 0.7 * n_ldl\n",
        "        + 0.6 * n_sys\n",
        "        + 0.3 * n_dia\n",
        "        + 0.8 * smoker\n",
        "        + 0.6 * fam\n",
        "        + 0.5 * n_bmi\n",
        "        + 0.5 * n_act\n",
        "        - 0.3\n",
        "        + 0.8 * n_hdl  # already negative\n",
        "    )\n",
        "    heart = float(sigmoid(h_score))\n",
        "\n",
        "    # Hypertension risk score\n",
        "    # drivers: systolic/diastolic BP, BMI, age, smoking, family history, activity\n",
        "    ht_score = (\n",
        "        1.2 * n_sys\n",
        "        + 0.8 * n_dia\n",
        "        + 0.6 * n_bmi\n",
        "        + 0.6 * n_age\n",
        "        + 0.4 * smoker\n",
        "        + 0.5 * fam\n",
        "        + 0.4 * n_act\n",
        "        - 0.2\n",
        "    )\n",
        "    htn = float(sigmoid(ht_score))\n",
        "\n",
        "    return {\n",
        "        \"diabetes_risk\": round(diabetes, 3),\n",
        "        \"heart_disease_risk\": round(heart, 3),\n",
        "        \"hypertension_risk\": round(htn, 3),\n",
        "    }\n",
        "\n",
        "def risk_band(p):\n",
        "    if p >= 0.67:\n",
        "        return \"High\"\n",
        "    if p >= 0.34:\n",
        "        return \"Moderate\"\n",
        "    return \"Low\"\n",
        "\n",
        "def make_care_plan(features, risks):\n",
        "    bmi = features.get(\"bmi\", np.nan)\n",
        "    act = features.get(\"activity_minutes_per_week\", 0)\n",
        "    sys_bp = features.get(\"systolic_bp\", 120)\n",
        "    fbg = features.get(\"fasting_glucose\", 95)\n",
        "    hba1c = features.get(\"hba1c\", 5.3)\n",
        "    smoker = features.get(\"smoker\", False)\n",
        "\n",
        "    # Key risk bands\n",
        "    d_band = risk_band(risks[\"diabetes_risk\"])\n",
        "    h_band = risk_band(risks[\"heart_disease_risk\"])\n",
        "    t_band = risk_band(risks[\"hypertension_risk\"])\n",
        "\n",
        "    plan = []\n",
        "    plan.append(\"⚠️ This autogenerated plan is not medical advice. Consult a clinician.\")\n",
        "\n",
        "    # General\n",
        "    if pd.notna(bmi):\n",
        "        if bmi >= 30:\n",
        "            plan.append(\"• Weight management: target 5–10% weight loss over 6–12 months.\")\n",
        "        elif bmi >= 25:\n",
        "            plan.append(\"• Aim to reach BMI < 25 with gradual lifestyle changes.\")\n",
        "        else:\n",
        "            plan.append(\"• Maintain current healthy weight with balanced nutrition.\")\n",
        "\n",
        "    if act < 150:\n",
        "        plan.append(\"• Physical activity: build to ≥150 min/week moderate activity (+ 2 strength days).\")\n",
        "    else:\n",
        "        plan.append(\"• Keep ≥150 min/week activity; add flexibility/strength work 2–3×/week.\")\n",
        "\n",
        "    if smoker:\n",
        "        plan.append(\"• Smoking: begin a cessation plan (set quit date, NRT or meds per clinician).\")\n",
        "\n",
        "    # Condition-specific\n",
        "    if d_band in [\"Moderate\", \"High\"] or fbg >= 100 or hba1c >= 5.7:\n",
        "        plan.append(\"• Glucose management: reduce refined carbs/sugary drinks; prefer high-fiber foods.\")\n",
        "        plan.append(\"• Monitor fasting glucose weekly; discuss HbA1c testing cadence (e.g., q3–6 months).\")\n",
        "\n",
        "    if t_band in [\"Moderate\", \"High\"] or sys_bp >= 130:\n",
        "        plan.append(\"• BP: limit sodium (~1.5–2 g/day), follow DASH-style diet, regular home BP logs.\")\n",
        "        plan.append(\"• Sleep hygiene: 7–9 h/night; screen for sleep apnea if snoring/daytime fatigue.\")\n",
        "\n",
        "    if h_band in [\"Moderate\", \"High\"]:\n",
        "        plan.append(\"• Lipids/heart: prioritize unsaturated fats, fish 2×/week, soluble fiber.\")\n",
        "        plan.append(\"• Add stress management: daily 10-min breathing/meditation; social support.\")\n",
        "\n",
        "    # Follow-up\n",
        "    plan.append(\"• Schedule preventive care visit; share home logs (BP/weight/glucose) with clinician.\")\n",
        "    return \"\\n\".join(plan)\n",
        "\n",
        "def to_download_button(data: bytes, filename: str, label: str):\n",
        "    b64 = base64.b64encode(data).decode()\n",
        "    href = f'<a href=\"data:file/txt;base64,{b64}\" download=\"{filename}\">{label}</a>'\n",
        "    return href\n",
        "\n",
        "# ---------------------------\n",
        "# Streamlit UI\n",
        "# ---------------------------\n",
        "st.set_page_config(page_title=\"Healthcare Assistant\", page_icon=\"🩺\", layout=\"wide\")\n",
        "\n",
        "st.title(\"🩺 Healthcare Assistant (Demo)\")\n",
        "st.caption(\"Educational tool — not for medical use.\")\n",
        "\n",
        "with st.sidebar:\n",
        "    st.header(\"Patient Intake\")\n",
        "    colA, colB = st.columns(2)\n",
        "    with colA:\n",
        "        age = st.number_input(\"Age\", min_value=0, max_value=120, value=35, step=1)\n",
        "        height_cm = st.number_input(\"Height (cm)\", min_value=80, max_value=250, value=170)\n",
        "        systolic_bp = st.number_input(\"Systolic BP\", min_value=70, max_value=250, value=122)\n",
        "        fasting_glucose = st.number_input(\"Fasting Glucose (mg/dL)\", min_value=50, max_value=400, value=95)\n",
        "        total_chol = st.number_input(\"Total Cholesterol (mg/dL)\", min_value=80, max_value=400, value=180)\n",
        "        hdl = st.number_input(\"HDL (mg/dL)\", min_value=10, max_value=120, value=50)\n",
        "    with colB:\n",
        "        sex = st.selectbox(\"Sex\", [\"Female\", \"Male\", \"Other\"])\n",
        "        weight_kg = st.number_input(\"Weight (kg)\", min_value=20.0, max_value=250.0, value=70.0, step=0.1)\n",
        "        diastolic_bp = st.number_input(\"Diastolic BP\", min_value=40, max_value=150, value=80)\n",
        "        hba1c = st.number_input(\"HbA1c (%)\", min_value=4.0, max_value=15.0, value=5.3, step=0.1)\n",
        "        ldl = st.number_input(\"LDL (mg/dL)\", min_value=30, max_value=300, value=110)\n",
        "        activity_minutes_per_week = st.number_input(\"Activity (min/week)\", min_value=0, max_value=2000, value=60, step=10)\n",
        "\n",
        "    smoker = st.checkbox(\"Currently smokes\")\n",
        "    family_history = st.checkbox(\"Family history of cardiometabolic disease\")\n",
        "\n",
        "    calc_bmi = compute_bmi(height_cm, weight_kg)\n",
        "    st.markdown(f\"**BMI:** {calc_bmi:.1f}\" if not pd.isna(calc_bmi) else \"**BMI:** —\")\n",
        "\n",
        "    if st.button(\"Predict Risks\"):\n",
        "        st.session_state[\"inputs\"] = {\n",
        "            \"age\": age,\n",
        "            \"sex\": sex,\n",
        "            \"height_cm\": height_cm,\n",
        "            \"weight_kg\": weight_kg,\n",
        "            \"bmi\": calc_bmi,\n",
        "            \"systolic_bp\": systolic_bp,\n",
        "            \"diastolic_bp\": diastolic_bp,\n",
        "            \"fasting_glucose\": fasting_glucose,\n",
        "            \"hba1c\": hba1c,\n",
        "            \"total_chol\": total_chol,\n",
        "            \"hdl\": hdl,\n",
        "            \"ldl\": ldl,\n",
        "            \"smoker\": smoker,\n",
        "            \"family_history\": family_history,\n",
        "            \"activity_minutes_per_week\": activity_minutes_per_week,\n",
        "        }\n",
        "        st.session_state[\"risks\"] = risk_model(st.session_state[\"inputs\"])\n",
        "        st.session_state[\"plan\"] = make_care_plan(st.session_state[\"inputs\"], st.session_state[\"risks\"])\n",
        "\n",
        "# Main layout\n",
        "tab_pred, tab_plan, tab_dash, tab_help = st.tabs(\n",
        "    [\"🧪 Predictions\", \"🗂 Care Plan\", \"📊 Dashboards\", \"ℹ️ Help & Template\"]\n",
        ")\n",
        "\n",
        "with tab_pred:\n",
        "    st.subheader(\"Predicted Risks\")\n",
        "    if \"risks\" in st.session_state:\n",
        "        risks = st.session_state[\"risks\"]\n",
        "        df_risk = pd.DataFrame(\n",
        "            {\n",
        "                \"Condition\": [\"Diabetes\", \"Heart Disease\", \"Hypertension\"],\n",
        "                \"Risk\": [risks[\"diabetes_risk\"], risks[\"heart_disease_risk\"], risks[\"hypertension_risk\"]],\n",
        "                \"Band\": [\n",
        "                    risk_band(risks[\"diabetes_risk\"]),\n",
        "                    risk_band(risks[\"heart_disease_risk\"]),\n",
        "                    risk_band(risks[\"hypertension_risk\"]),\n",
        "                ],\n",
        "            }\n",
        "        )\n",
        "        c1, c2 = st.columns([2, 1])\n",
        "        with c1:\n",
        "            fig = px.bar(\n",
        "                df_risk, x=\"Condition\", y=\"Risk\", color=\"Band\", range_y=[0, 1],\n",
        "                text=df_risk[\"Risk\"].map(lambda x: f\"{x:.2f}\")\n",
        "            )\n",
        "            fig.update_layout(yaxis_title=\"Risk (0–1)\", xaxis_title=\"\", uniformtext_minsize=10, uniformtext_mode=\"hide\")\n",
        "            st.plotly_chart(fig, use_container_width=True)\n",
        "        with c2:\n",
        "            st.dataframe(df_risk, use_container_width=True)\n",
        "        st.success(\"Predictions generated. See the Care Plan tab for suggestions.\")\n",
        "    else:\n",
        "        st.info(\"Use the sidebar to enter patient details and click **Predict Risks**.\")\n",
        "\n",
        "with tab_plan:\n",
        "    st.subheader(\"Autogenerated Care Plan (Demo)\")\n",
        "    if \"plan\" in st.session_state and \"inputs\" in st.session_state:\n",
        "        st.text(st.session_state[\"plan\"])\n",
        "\n",
        "        # Download plan with inputs and risks as a text file\n",
        "        report = {\n",
        "            \"timestamp\": datetime.utcnow().isoformat() + \"Z\",\n",
        "            \"inputs\": st.session_state[\"inputs\"],\n",
        "            \"risks\": st.session_state[\"risks\"],\n",
        "            \"plan\": st.session_state[\"plan\"],\n",
        "        }\n",
        "        txt = (\n",
        "            \"Healthcare Assistant Report (Demo)\\n\"\n",
        "            \"=================================\\n\\n\"\n",
        "            f\"Timestamp (UTC): {report['timestamp']}\\n\\n\"\n",
        "            \"Inputs:\\n\"\n",
        "            + json.dumps(report[\"inputs\"], indent=2)\n",
        "            + \"\\n\\nRisks:\\n\"\n",
        "            + json.dumps(report[\"risks\"], indent=2)\n",
        "            + \"\\n\\nPlan:\\n\"\n",
        "            + report[\"plan\"]\n",
        "            + \"\\n\"\n",
        "        ).encode()\n",
        "        st.download_button(\n",
        "            \"Download Plan & Report (.txt)\",\n",
        "            data=txt,\n",
        "            file_name=\"healthcare_plan_report.txt\",\n",
        "            mime=\"text/plain\",\n",
        "        )\n",
        "    else:\n",
        "        st.info(\"No plan yet. Generate predictions first.\")\n",
        "\n",
        "with tab_dash:\n",
        "    st.subheader(\"Population Dashboard\")\n",
        "    st.caption(\"Upload a CSV of patients to visualize risks and metrics. Columns are auto-detected.\")\n",
        "    sample_cols = [\n",
        "        \"patient_id\",\"age\",\"sex\",\"height_cm\",\"weight_kg\",\"systolic_bp\",\"diastolic_bp\",\n",
        "        \"fasting_glucose\",\"hba1c\",\"total_chol\",\"hdl\",\"ldl\",\"smoker\",\"family_history\",\"activity_minutes_per_week\"\n",
        "    ]\n",
        "    uploaded = st.file_uploader(\"Upload CSV\", type=[\"csv\"])\n",
        "\n",
        "    if uploaded is not None:\n",
        "        df = pd.read_csv(uploaded)\n",
        "        # Ensure required columns exist; create if missing\n",
        "        for col in sample_cols:\n",
        "            if col not in df.columns:\n",
        "                df[col] = np.nan\n",
        "\n",
        "        # Compute BMI\n",
        "        df[\"bmi\"] = df.apply(lambda r: compute_bmi(r[\"height_cm\"], r[\"weight_kg\"]), axis=1)\n",
        "\n",
        "        # Coarse type fixes\n",
        "        for bcol in [\"smoker\", \"family_history\"]:\n",
        "            if bcol in df.columns:\n",
        "                df[bcol] = df[bcol].map(lambda x: 1 if str(x).strip().lower() in [\"1\",\"true\",\"yes\",\"y\"] else 0)\n",
        "\n",
        "        # Risk predictions per row\n",
        "        def row_risks(r):\n",
        "            feats = {\n",
        "                \"age\": r.get(\"age\", np.nan),\n",
        "                \"sex\": r.get(\"sex\", \"Other\"),\n",
        "                \"height_cm\": r.get(\"height_cm\", np.nan),\n",
        "                \"weight_kg\": r.get(\"weight_kg\", np.nan),\n",
        "                \"bmi\": r.get(\"bmi\", np.nan),\n",
        "                \"systolic_bp\": r.get(\"systolic_bp\", np.nan),\n",
        "                \"diastolic_bp\": r.get(\"diastolic_bp\", np.nan),\n",
        "                \"fasting_glucose\": r.get(\"fasting_glucose\", np.nan),\n",
        "                \"hba1c\": r.get(\"hba1c\", np.nan),\n",
        "                \"total_chol\": r.get(\"total_chol\", np.nan),\n",
        "                \"hdl\": r.get(\"hdl\", np.nan),\n",
        "                \"ldl\": r.get(\"ldl\", np.nan),\n",
        "                \"smoker\": bool(r.get(\"smoker\", 0)),\n",
        "                \"family_history\": bool(r.get(\"family_history\", 0)),\n",
        "                \"activity_minutes_per_week\": r.get(\"activity_minutes_per_week\", np.nan),\n",
        "            }\n",
        "            return risk_model(feats)\n",
        "\n",
        "        risks_list = df.apply(row_risks, axis=1)\n",
        "        df[\"diabetes_risk\"] = risks_list.map(lambda d: d[\"diabetes_risk\"])\n",
        "        df[\"heart_disease_risk\"] = risks_list.map(lambda d: d[\"heart_disease_risk\"])\n",
        "        df[\"hypertension_risk\"] = risks_list.map(lambda d: d[\"hypertension_risk\"])\n",
        "\n",
        "        # Banding\n",
        "        df[\"diabetes_band\"] = df[\"diabetes_risk\"].map(risk_band)\n",
        "        df[\"heart_band\"] = df[\"heart_disease_risk\"].map(risk_band)\n",
        "        df[\"hypertension_band\"] = df[\"hypertension_risk\"].map(risk_band)\n",
        "\n",
        "        st.markdown(\"### Overview\")\n",
        "        k1, k2, k3, k4 = st.columns(4)\n",
        "        k1.metric(\"Patients\", len(df))\n",
        "        k2.metric(\"Avg BMI\", f\"{df['bmi'].mean():.1f}\")\n",
        "        k3.metric(\"Avg Systolic BP\", f\"{df['systolic_bp'].mean():.0f}\")\n",
        "        k4.metric(\"Avg Fasting Glucose\", f\"{df['fasting_glucose'].mean():.0f}\")\n",
        "\n",
        "        st.markdown(\"### Risk Distribution\")\n",
        "        c1, c2 = st.columns(2)\n",
        "        with c1:\n",
        "            fig1 = px.histogram(df, x=\"diabetes_risk\", nbins=20, title=\"Diabetes Risk\")\n",
        "            st.plotly_chart(fig1, use_container_width=True)\n",
        "            fig2 = px.histogram(df, x=\"heart_disease_risk\", nbins=20, title=\"Heart Disease Risk\")\n",
        "            st.plotly_chart(fig2, use_container_width=True)\n",
        "        with c2:\n",
        "            fig3 = px.histogram(df, x=\"hypertension_risk\", nbins=20, title=\"Hypertension Risk\")\n",
        "            st.plotly_chart(fig3, use_container_width=True)\n",
        "            band_counts = df[[\"diabetes_band\",\"heart_band\",\"hypertension_band\"]].melt(var_name=\"type\", value_name=\"band\")\n",
        "            fig4 = px.bar(band_counts.value_counts().reset_index().rename(columns={\"count\":\"n\"}),\n",
        "                          x=\"type\", y=\"n\", color=\"band\", title=\"Risk Bands Count\")\n",
        "            st.plotly_chart(fig4, use_container_width=True)\n",
        "\n",
        "        st.markdown(\"### Relationships\")\n",
        "        r1, r2 = st.columns(2)\n",
        "        with r1:\n",
        "            fig5 = px.scatter(df, x=\"bmi\", y=\"fasting_glucose\", color=\"diabetes_band\", title=\"BMI vs Fasting Glucose\")\n",
        "            st.plotly_chart(fig5, use_container_width=True)\n",
        "        with r2:\n",
        "            fig6 = px.scatter(df, x=\"systolic_bp\", y=\"diastolic_bp\", color=\"hypertension_band\", title=\"BP Scatter\")\n",
        "            st.plotly_chart(fig6, use_container_width=True)\n",
        "\n",
        "        st.markdown(\"### Data Preview\")\n",
        "        st.dataframe(df.head(50), use_container_width=True)\n",
        "\n",
        "        # Download enriched dataset\n",
        "        out = io.StringIO()\n",
        "        df.to_csv(out, index=False)\n",
        "        st.download_button(\n",
        "            \"Download Enriched CSV\",\n",
        "            data=out.getvalue().encode(),\n",
        "            file_name=\"patients_enriched.csv\",\n",
        "            mime=\"text/csv\",\n",
        "        )\n",
        "    else:\n",
        "        st.info(\"Upload a CSV to see cohort dashboards.\")\n",
        "\n",
        "with tab_help:\n",
        "    st.subheader(\"How to Use\")\n",
        "    st.markdown(\n",
        "        \"\"\"\n",
        "1) **Enter patient details** in the sidebar → click **Predict Risks**\n",
        "2) See **Predictions** and **Care Plan**\n",
        "3) Upload a CSV in **Dashboards** to visualize a population\n",
        "\n",
        "**CSV Template Columns** (case-sensitive):\n",
        "- `patient_id` (str/int)\n",
        "- `age` (int), `sex` (Female/Male/Other)\n",
        "- `height_cm`, `weight_kg`\n",
        "- `systolic_bp`, `diastolic_bp`\n",
        "- `fasting_glucose`, `hba1c`\n",
        "- `total_chol`, `hdl`, `ldl`\n",
        "- `smoker` (1/0, yes/no/true/false)\n",
        "- `family_history` (1/0, yes/no/true/false)\n",
        "- `activity_minutes_per_week`\n",
        "\"\"\"\n",
        "    )\n",
        "\n",
        "    # Provide a downloadable sample CSV\n",
        "    sample = pd.DataFrame({\n",
        "        \"patient_id\": [f\"P{i:03d}\" for i in range(1, 31)],\n",
        "        \"age\": np.random.randint(25, 75, 30),\n",
        "        \"sex\": np.random.choice([\"Female\",\"Male\",\"Other\"], 30, p=[0.48,0.48,0.04]),\n",
        "        \"height_cm\": np.random.normal(168, 10, 30).round(0).clip(145, 195),\n",
        "        \"weight_kg\": np.random.normal(75, 15, 30).round(1).clip(45, 140),\n",
        "        \"systolic_bp\": np.random.normal(128, 16, 30).round(0).clip(90, 200),\n",
        "        \"diastolic_bp\": np.random.normal(82, 10, 30).round(0).clip(55, 120),\n",
        "        \"fasting_glucose\": np.random.normal(98, 15, 30).round(0).clip(65, 240),\n",
        "        \"hba1c\": np.random.normal(5.6, 0.7, 30).round(1).clip(4.5, 11.0),\n",
        "        \"total_chol\": np.random.normal(190, 35, 30).round(0).clip(110, 320),\n",
        "        \"hdl\": np.random.normal(52, 12, 30).round(0).clip(25, 90),\n",
        "        \"ldl\": np.random.normal(120, 30, 30).round(0).clip(60, 220),\n",
        "        \"smoker\": np.random.choice([0,1], 30, p=[0.75,0.25]),\n",
        "        \"family_history\": np.random.choice([0,1], 30, p=[0.7,0.3]),\n",
        "        \"activity_minutes_per_week\": np.random.normal(110, 70, 30).round(0).clip(0, 600),\n",
        "    })\n",
        "    sample[\"bmi\"] = sample.apply(lambda r: compute_bmi(r[\"height_cm\"], r[\"weight_kg\"]), axis=1)\n",
        "    csv_bytes = sample.to_csv(index=False).encode()\n",
        "    st.download_button(\n",
        "        \"Download Sample CSV\",\n",
        "        data=csv_bytes,\n",
        "        file_name=\"sample_patients.csv\",\n",
        "        mime=\"text/csv\",\n",
        "    )\n",
        "\n",
        "# Footer disclaimer\n",
        "st.write(\"---\")\n",
        "st.caption(\"© 2025 Demo. For education only. Not a medical device or diagnostic tool.\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "O-LyoFKqS_fu",
        "outputId": "7fcef3a0-6b2e-49f7-a3da-0a165f0e534c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: streamlit in /usr/local/lib/python3.12/dist-packages (1.49.1)\n",
            "Requirement already satisfied: altair!=5.4.0,!=5.4.1,<6,>=4.0 in /usr/local/lib/python3.12/dist-packages (from streamlit) (5.5.0)\n",
            "Requirement already satisfied: blinker<2,>=1.5.0 in /usr/local/lib/python3.12/dist-packages (from streamlit) (1.9.0)\n",
            "Requirement already satisfied: cachetools<7,>=4.0 in /usr/local/lib/python3.12/dist-packages (from streamlit) (5.5.2)\n",
            "Requirement already satisfied: click<9,>=7.0 in /usr/local/lib/python3.12/dist-packages (from streamlit) (8.2.1)\n",
            "Requirement already satisfied: numpy<3,>=1.23 in /usr/local/lib/python3.12/dist-packages (from streamlit) (2.0.2)\n",
            "Requirement already satisfied: packaging<26,>=20 in /usr/local/lib/python3.12/dist-packages (from streamlit) (25.0)\n",
            "Requirement already satisfied: pandas<3,>=1.4.0 in /usr/local/lib/python3.12/dist-packages (from streamlit) (2.2.2)\n",
            "Requirement already satisfied: pillow<12,>=7.1.0 in /usr/local/lib/python3.12/dist-packages (from streamlit) (11.3.0)\n",
            "Requirement already satisfied: protobuf<7,>=3.20 in /usr/local/lib/python3.12/dist-packages (from streamlit) (5.29.5)\n",
            "Requirement already satisfied: pyarrow>=7.0 in /usr/local/lib/python3.12/dist-packages (from streamlit) (18.1.0)\n",
            "Requirement already satisfied: requests<3,>=2.27 in /usr/local/lib/python3.12/dist-packages (from streamlit) (2.32.4)\n",
            "Requirement already satisfied: tenacity<10,>=8.1.0 in /usr/local/lib/python3.12/dist-packages (from streamlit) (8.5.0)\n",
            "Requirement already satisfied: toml<2,>=0.10.1 in /usr/local/lib/python3.12/dist-packages (from streamlit) (0.10.2)\n",
            "Requirement already satisfied: typing-extensions<5,>=4.4.0 in /usr/local/lib/python3.12/dist-packages (from streamlit) (4.15.0)\n",
            "Requirement already satisfied: watchdog<7,>=2.1.5 in /usr/local/lib/python3.12/dist-packages (from streamlit) (6.0.0)\n",
            "Requirement already satisfied: gitpython!=3.1.19,<4,>=3.0.7 in /usr/local/lib/python3.12/dist-packages (from streamlit) (3.1.45)\n",
            "Requirement already satisfied: pydeck<1,>=0.8.0b4 in /usr/local/lib/python3.12/dist-packages (from streamlit) (0.9.1)\n",
            "Requirement already satisfied: tornado!=6.5.0,<7,>=6.0.3 in /usr/local/lib/python3.12/dist-packages (from streamlit) (6.4.2)\n",
            "Requirement already satisfied: jinja2 in /usr/local/lib/python3.12/dist-packages (from altair!=5.4.0,!=5.4.1,<6,>=4.0->streamlit) (3.1.6)\n",
            "Requirement already satisfied: jsonschema>=3.0 in /usr/local/lib/python3.12/dist-packages (from altair!=5.4.0,!=5.4.1,<6,>=4.0->streamlit) (4.25.1)\n",
            "Requirement already satisfied: narwhals>=1.14.2 in /usr/local/lib/python3.12/dist-packages (from altair!=5.4.0,!=5.4.1,<6,>=4.0->streamlit) (2.2.0)\n",
            "Requirement already satisfied: gitdb<5,>=4.0.1 in /usr/local/lib/python3.12/dist-packages (from gitpython!=3.1.19,<4,>=3.0.7->streamlit) (4.0.12)\n",
            "Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.12/dist-packages (from pandas<3,>=1.4.0->streamlit) (2.9.0.post0)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.12/dist-packages (from pandas<3,>=1.4.0->streamlit) (2025.2)\n",
            "Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.12/dist-packages (from pandas<3,>=1.4.0->streamlit) (2025.2)\n",
            "Requirement already satisfied: charset_normalizer<4,>=2 in /usr/local/lib/python3.12/dist-packages (from requests<3,>=2.27->streamlit) (3.4.3)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.12/dist-packages (from requests<3,>=2.27->streamlit) (3.10)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.12/dist-packages (from requests<3,>=2.27->streamlit) (2.5.0)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.12/dist-packages (from requests<3,>=2.27->streamlit) (2025.8.3)\n",
            "Requirement already satisfied: smmap<6,>=3.0.1 in /usr/local/lib/python3.12/dist-packages (from gitdb<5,>=4.0.1->gitpython!=3.1.19,<4,>=3.0.7->streamlit) (5.0.2)\n",
            "Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.12/dist-packages (from jinja2->altair!=5.4.0,!=5.4.1,<6,>=4.0->streamlit) (3.0.2)\n",
            "Requirement already satisfied: attrs>=22.2.0 in /usr/local/lib/python3.12/dist-packages (from jsonschema>=3.0->altair!=5.4.0,!=5.4.1,<6,>=4.0->streamlit) (25.3.0)\n",
            "Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /usr/local/lib/python3.12/dist-packages (from jsonschema>=3.0->altair!=5.4.0,!=5.4.1,<6,>=4.0->streamlit) (2025.4.1)\n",
            "Requirement already satisfied: referencing>=0.28.4 in /usr/local/lib/python3.12/dist-packages (from jsonschema>=3.0->altair!=5.4.0,!=5.4.1,<6,>=4.0->streamlit) (0.36.2)\n",
            "Requirement already satisfied: rpds-py>=0.7.1 in /usr/local/lib/python3.12/dist-packages (from jsonschema>=3.0->altair!=5.4.0,!=5.4.1,<6,>=4.0->streamlit) (0.27.0)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.12/dist-packages (from python-dateutil>=2.8.2->pandas<3,>=1.4.0->streamlit) (1.17.0)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "2025-09-03 11:18:11.771 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.772 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.774 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.775 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.776 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.777 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.778 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.780 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.782 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.784 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.785 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.786 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.787 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.788 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.789 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.789 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.790 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.791 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.792 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.793 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.793 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.794 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.795 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.796 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.796 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.797 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.798 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.798 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.799 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.800 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.800 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.801 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.802 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.803 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.803 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.804 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.805 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.806 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.807 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.807 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.808 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.809 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.810 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.811 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.811 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.812 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.813 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.813 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.814 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.814 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.815 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.816 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.816 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.817 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.818 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.818 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.819 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.820 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.820 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.821 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.822 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.822 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.823 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.823 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.824 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.825 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.826 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.827 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.827 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.828 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.829 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.829 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.830 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.831 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.831 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.832 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.833 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.833 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.834 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.834 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.835 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.836 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.836 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.837 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.837 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.838 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.839 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.839 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.840 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.840 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.841 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.842 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.842 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.843 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.844 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.844 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.845 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.845 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.846 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.847 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.847 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.848 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.848 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.849 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.850 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.850 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.851 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.852 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.852 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.853 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.854 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.854 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.855 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.856 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.856 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.857 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.857 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.858 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.859 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.860 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.860 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.861 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.862 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.863 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.863 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.864 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.865 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.865 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.866 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.867 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.868 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.868 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.869 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.870 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.870 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.871 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.871 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.874 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.874 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.875 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.876 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.876 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.877 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.878 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.878 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.879 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.879 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.880 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.881 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.881 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.882 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.882 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.884 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.885 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.885 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.886 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.887 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.887 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.924 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.925 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.925 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.926 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.927 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.927 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.928 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.929 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.929 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.930 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.931 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.931 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n",
            "2025-09-03 11:18:11.932 Thread 'MainThread': missing ScriptRunContext! This warning can be ignored when running in bare mode.\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "DeltaGenerator()"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    }
  ]
}